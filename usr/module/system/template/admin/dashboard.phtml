<?php
    $this->css($this->assetModule('script/system-ui.css'));
    $this->jQuery('ui/jquery-ui.custom.min.js');
    $this->backbone();
?>

<style>
    .box-bordered {
        background: #fff;
    }
    .memo-edit-conent {
        width: 97%;
        height: 117px;
        resize: none;
    }
    .dash-panel .info-items-add {
        margin-bottom: 10px;
    }
    .entries-items li {
        text-align: center;
        width: 130px;
    }
    .info-items-add >li {
        cursor: pointer;
        padding: 0 10px;
        border: 1px solid #c1c6cb;
        margin: 0 0 10px 10px;
    }
    .quick-links li {
        padding:0 10px;
        cursor: move;
        border: 1px solid transparent;
        background: #fff;
    }
    .quick-links li:hover {
        border-color: #c1c6cb;
    }
    .entries-items p, .info-items-add p {
        margin: 4px 0 0;
        white-space: nowrap;
    }
    .info-items .box-bordered-header {
        cursor: move;
        font-size: 14px;
    }
    .info-items .box-bordered-header:hover .close,
    .quick-links li:hover .close {
        display: block;
    }
    .box-bordered-body ul {
        margin: 0 0 0 10px;
    }
    .fold .box-bordered-body {
        display: none;
    }
    .info-items-add {
        padding-top: 10px;
    }
    .link-form {
        margin:0 20px 10px;
    }
    .link-form input[type='text'] {
        display: block;
        clear: both;
    }
    .btn-primary.message {
        position: relative;
        overflow: visible;
    }
    .message-num {
        font-size: 9px;
        border-radius: 12px;
        width: 15px;
        height: 15px;
        display: block;
        background: #fe8005;
        line-height: 14px;
        z-index: 10;
        position: absolute;
        top: -5px;
        right: -7px;
    }
    .legend  .btn-primary {
        margin-top: -6px;
    }
    .add-link-form form {
        margin: 10px 0;
    }
    .add-link-form .control-group {
       float: left;
       margin: 0;
    }
    .add-link-form .control-label {
       width: 80px;
    }
    .add-link-form .controls {
        margin-left: 110px;
    }
    .info-items .box-bordered-body {
        height: 90px;
        overflow-y: auto;
    }
</style>
<h2 class="page-header"><?php echo $this->escape($title); ?></h2>
<div class="row-fluid" id="js-page">
<div class="span8">
    <div class="dash-panel">
        <div class="legend clearfix">
            <?php _e('Module management'); ?>
        </div>
        <ul class="entries-items clearfix">
        <?php foreach ($modules as $name => $meta) { ?>
            <li class="inline-block">
                <a href="<?php echo $this->url('admin', array('module' => $name, 'controller' => 'index')); ?>" title="<?php echo $this->escape($meta['title']); ?>" data-name="<?php echo $meta['name']; ?>">
                    <img src="<?php echo $this->assetModule($meta['logo'], $name); ?>"  />
                    <p><?php echo $this->escape($meta['title']); ?></p>
                </a>
        <?php } ?>
        </ul>
    </div>
    <div class="dash-panel" id="js-summary">
        <div class="legend clearfix">
             <button class="pull-right btn btn-small btn-primary info-add"><i class="icon-plus icon-white"></i><?php _e(' Add'); ?></button>
            <?php _e('Module summary'); ?>
        </div>
        <ul class="box-bordered info-items-add hide">
        </ul>
        <ul class="clearfix info-items">
        </ul>
    </div>
    <div class="dash-panel" id="js-link">
        <div class="legend clearfix">
            <button class="pull-right btn btn-small btn-primary link-add"><i class="icon-plus icon-white"></i><?php _e(' Add'); ?></button>
            <?php _e('Quick links:'); ?>
        </div>
        <div class="box-bordered hide add-link-form">
        <form class="clearfix form-horizontal">
                <div class="control-group">
                  <label class="control-label"><?php _e('Link Name'); ?></label>
                  <div class="controls">
                     <input type="text"  class="add-link-name" autocomplete="off" />
                  </div>
                </div>
               <div class="control-group">
                  <label class="control-label"><?php _e('Link URL'); ?></label>
                  <span class="what-this" data-original-title="<?php _e('Any link w/o leading http[s]:// will be converted to local link.'); ?>">?</span>
                  <div class="controls">
                      <input type="text"  autocomplete="off" class="add-link-url" />
                  </div>
                </div>
                <input type="submit" value="<?php _e('Submit'); ?>" class="btn pull-left" style="margin-left: 20px;"/>
         </form>
        </div>
        <ul class="quick-links">
        </ul>
    </div>
</div>
<div class="span4" id="js-right">
    <div class="box-bordered box-memo" id="system-info">
         <div class="accordion-toggle box-bordered-header clearfix">
                 <button class="pull-right btn btn-small btn-primary message">
                    <span class="message-num"><?php echo count($messages); ?></span>
                    <i class="icon-envelope icon-white"></i>
                 </button>
            <?php _e('System messages:'); ?>
        </div>
        <div class="box-bordered-body">
            <?php foreach ($messages as $meta) { ?>
            <li class="clearfix">
                <h3><?php echo empty($meta['title']) ? '' : $this->escape($meta['title']); ?></h3>
                <div><?php echo $this->escape($meta['content']); ?></div>
                <span class="pull-right"><?php echo $meta['time']; ?></span>
            <?php } ?>
        </div>
    </div>
    <div class="box-bordered box-memo" id="personal-memo">
         <div class="accordion-toggle box-bordered-header clearfix">
               <button class="pull-right btn btn-small btn-primary  memo-add"><i class="icon-plus icon-white"></i><?php _e(' Add'); ?></button>
            <?php _e('Personal memo:'); ?>
        </div>
        <div class="box-bordered-body memo-wrap overhidden">
           <div id="memo-inner">
            <form class="memo-edit clearfix">
                <textarea class="memo-edit-conent"></textarea>
                <input type="submit" class="pull-right btn" value="<?php _e('Submit'); ?>"/>
            </form>
            <div class="memo-content clearfix">
                 <div><?php echo empty($memo['content']) ? '' : $this->escape($memo['content']); ?></div>
                 <span class="pull-right"><?php echo empty($memo['time']) ? '' : $memo['time']; ?></span>
            </div>
           </div>

        </div>
    </div>
</div>
</div>
<script id="temp-info-item-add" type="text/template">
    <button class="close">+</button>
    <span class="a-title"><%= _.escape(title) %></span>
</script>
<script id="temp-info-item" type="text/template">
    <div class="box-bordered-header clearfix nowrap">
        <button class="close hide">×</button>
        <i class="icon-th-large"></i>
        <span class="i-title"><%= _.escape(title) %></span>
    </div>
    <div class="box-bordered-body">
        <%= content %>
    </div>
</script>
<script id="temp-link-item" type="text/template">
    <button class="close hide">×</button>
    <a href="<%= url %>" class="link"><%= _.escape(title) %></a>
</script>

<script>
(function($) {
     if (localStorage) {
         if (!localStorage.getItem("system-info")) {
             $("#system-info").addClass("fold");
         }
         if (!localStorage.getItem("personal-memo")) {
             $("#personal-memo").addClass("fold");
         }
     }
     var a = $(".entries-items");
     a.sortable({
         revert: 300,
         update: _.bind(function() {
             var ret = [];
             a.find("a").each(function() {
                 ret.push(this.getAttribute("data-name"));
             });
             $.post("<?php echo $this->url('', array('action' => 'entry')); ?>", {
                 content: ret
             });
         }, this)
     });
     function sortSummary() {
         var obj = {};
         obj['active'] = summaryActiveCollection.pluck("name");
         obj['inactive'] = summaryInactiveCollection.pluck("name");
         $.post("<?php echo $this->url('', array('action' => 'summary')); ?>", {
             content: obj
         });
     }
     var summaryActiveCollection = new Backbone.Collection(<?php echo json_encode(array_values($summaryList['active'])); ?>);
     var summaryInactiveCollection = new Backbone.Collection(<?php echo json_encode(array_values($summaryList['inactive'])); ?>);
     var linksCollection = new Backbone.Collection(<?php echo json_encode($links); ?>);
     var summaryInactiveListItemView = Backbone.View.extend({
         template: _.template($("#temp-info-item-add").html()),
         tagName: "li",
         className: "w150",
         events: {
             "click .close": "destroy"
         },
         initialize: function() {
             this.model.on("destroy", this.remove, this);
         },
         destroy: function() {
             var m = this.model,
                 self = this;
             $.post("<?php echo $this->url('', array('action' => 'getSummary')); ?>", {
                 name: m.get("name")
             }).done(function(result) {
                 m.set("content", result);
                 summaryActiveCollection.add(self.model.clone());
                 sortSummary();
             });
             this.model.destroy();
         },
         render: function() {
             this.$el.html(this.template(this.model.toJSON()));
             return this.el;
         }
     });
     var summaryActiveListItemView = Backbone.View.extend({
         template: _.template($("#temp-info-item").html()),
         tagName: "li",
         className: "box-bordered w250",
         events: {
             "click .close": "destroy"
         },
         initialize: function() {
             this.$el.attr("data-cid", this.model.cid);
             this.model.on("destroy", this.remove, this);
         },
         destroy: function() {
             summaryInactiveCollection.add(this.model.clone());
             this.model.destroy();
         },
         render: function() {
             this.$el.html(this.template(this.model.toJSON()));
             return this.el;
         }
     });
     var Summary = Backbone.View.extend({
         el: $("#js-summary"),
         events: {
             "click .info-add": "toggleActive"
         },
         initialize: function() {
             this.inActiveEl = this.$(".info-items-add");
             this.activeEl = this.$(".info-items");
             summaryInactiveCollection.on("add", this.addInActive, this);
             summaryActiveCollection.on("add", this.addActive, this);
             summaryActiveCollection.on("remove", sortSummary, this);
             this.render();
             this.activeEl.sortable({
                 revert: 300,
                 handle: ".box-bordered-header",
                 update: _.bind(function(e, ui) {
                     var index = 1;
                     this.activeEl.find(">*").each(function() {
                         summaryActiveCollection.getByCid($(this).attr("data-cid")).set("index", index++);
                     });
                     summaryActiveCollection.models.sort(function(m1, m2) {
                         return m1.get("index") - m2.get("index");
                     });
                     sortSummary();
                 }, this)
             });
         },
         toggleActive: function() {
             var el1 = this.inActiveEl,
                 el2 = this.$(".info-add");
             if (el1.css("display") == "none") {
                 el2.find("i")[0].className = "icon-white icon-arrow-up";
                 el1.fadeIn("150");
             } else {
                 el1.fadeOut("150");
                 el2.find("i")[0].className = "icon-plus icon-white";
             }
         },
         render: function() {
             var el2 = this.activeEl,
                 m1 = summaryInactiveCollection.models,
                 m2 = summaryActiveCollection.models;
             for (var i = 0, l = m1.length; i < l; i++) {
                 this.addInActive(m1[i]);
             }
             for (var i = 0, l = m2.length; i < l; i++) {
                 el2.append(new summaryActiveListItemView({
                     model: m2[i]
                 }).render());
             }
         },
         addInActive: function(m) {
             this.inActiveEl.append(new summaryInactiveListItemView({
                 model: m
             }).render());
         },
         addActive: function(m) {
             this.activeEl.append(new summaryActiveListItemView({
                 model: m
             }).render());
             if (!summaryInactiveCollection.length) {
                 this.toggleActive();
             }
         }
     });
     var LinksItemView = Backbone.View.extend({
         template: _.template($("#temp-link-item").html()),
         tagName: "li",
         className: "w180",
         events: {
             "click .close": "destroy"
         },
         initialize: function() {
             this.$el.attr("data-cid", this.model.cid);
             this.model.on("destroy", this.remove, this);
         },
         destroy: function() {
             this.model.destroy();
         },
         render: function() {
             this.$el.html(this.template(this.model.toJSON()));
             return this.el;
         }
     });
     var LinksListView = Backbone.View.extend({
         el: $("#js-link"),
         events: {
             "click .link-add": "toggleForm",
             "click input[type=submit]": "submitAdd"
         },
         initialize: function() {
             this.linksEl = this.$(".quick-links");
             this.render();
             linksCollection.on("add", this.addOne, this);
             linksCollection.on("remove", this.updateLink, this);
             this.linksEl.sortable({
                 revert: 300,
                 update: _.bind(function() {
                     var index = 1;
                     this.linksEl.find(">li").each(function() {
                         linksCollection.getByCid($(this).attr("data-cid")).set("index", index++);
                     });
                     linksCollection.models.sort(function(m1, m2) {
                         return m1.get("index") - m2.get("index");
                     });
                     this.updateLink();
                 }, this)
             });
         },
         render: function() {
             var m = linksCollection.models;
             for (var i = 0, l = m.length; i < l; i++) {
                 this.addOne(m[i]);
             }
         },
         addOne: function(m) {
             this.linksEl.append(new LinksItemView({
                 model: m
             }).render());
         },
         submitAdd: function(e) {
             e.preventDefault();
             var v1 = $.trim(this.$(".add-link-name").val()),
                 v2 = $.trim(this.$(".add-link-url").val());
             if (!v1) return;
             linksCollection.push(new Backbone.Model({
                 title: v1,
                 url: v2
             }));
             this.$("form")[0].reset();
             this.updateLink();
         },
         toggleForm: function() {
             var el1 = this.$(".add-link-form"),
                 el2 = this.$(".link-add");
             if (el1.css("display") == "none") {
                 el2.find("i")[0].className = "icon-white icon-arrow-up";
                 el1.fadeIn("150");
             } else {
                 el1.fadeOut("150");
                 el2.find("i")[0].className = "icon-plus icon-white";
             }
         },
         updateLink: function() {
             $.post("<?php echo $this->url('', array('action' => 'link')); ?>", {
                 content: linksCollection.toJSON()
             });
         }
     });
     new Summary;
     new LinksListView;
     var RightView = Backbone.View.extend({
         el: $("#js-right"),
         initialize: function() {
             var _$ = _.bind(this.$, this);
             this.boxMemo = _$(".box-memo");
             this.memoEdit = _$(".memo-edit");
             this.memoAdd = _$(".memo-add");
             this.memoEditConent = _$(".memo-edit-conent");
             this.memoInner = _$("#memo-inner");
             this.addLinkFormWrap = _$(".add-link-form");
             this.boxMemo.on("click", ".accordion-toggle", function() {
                 var p = $(this).parents(".box-memo"),
                     storage = function(key, action) {
                         if (action == "set") {
                             localStorage && localStorage.setItem(key, 1);
                         } else if (action == "remove") {
                             localStorage && localStorage.removeItem(key);
                         }
                     };
                 if (p.hasClass("fold")) {
                     p.find(".box-bordered-body").slideDown("300", function() {
                         p.removeClass("fold")
                     });
                     storage(p.attr("id"), "set");
                 } else {
                     p.find(".box-bordered-body").slideUp("300", function() {
                         p.addClass("fold")
                     });
                     storage(p.attr("id"), "remove");
                 }
             });
             this.memoEdit.submit(function(e) {
                 e.preventDefault();
                 var v = $.trim(this.memoEditConent.val());
                 if (v) {
                     $.post("<?php echo $this->url('', array('action' => 'memo')); ?>", {
                         content: v
                     }).done(_.bind(function(result) {
                         result = $.parseJSON(result);
                         this.$(".memo-content").find(">div").html(result.content).end().find(">span").html(result.time);
                         this.memoEdit[0].reset();
                     }, this));
                 }
                 this.memoInner.css("marginTop", - this.memoEdit.outerHeight(true));
             }.bind(this));
             this.memoAdd.click(_.bind(function(e) {
                 e.stopPropagation();
                 if (this.$(".memo-wrap").css("display") != "none") {
                     if (parseInt(this.memoInner.css("marginTop")) == 0) {
                         this.memoAdd.find("i")[0].className = "icon-plus icon-white";
                         this.memoInner.css("marginTop", - this.memoEdit.outerHeight(true));
                     } else {
                         this.memoInner.css("marginTop", 0);
                         this.memoAdd.find("i")[0].className = "icon-white icon-arrow-up";
                     }
                 }
             }, this));
         }
     });
   var rw = new RightView;
   setTimeout(function() {
        rw.memoInner.css("transition", "margin .6s cubic-bezier(.25,.25,.1,1)");
   }, 10);
   <?php if (!empty($memo)) { ?>
        if (!$("#personal-memo").hasClass("fold")) {
            rw.memoInner.css("marginTop", -rw.memoEdit.outerHeight(true));
        }
   <?php } ?>
})(jQuery)
</script>


